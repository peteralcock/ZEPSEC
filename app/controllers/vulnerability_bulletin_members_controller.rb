# frozen_string_literal: true

class VulnerabilityBulletinMembersController < ApplicationController
  include Record


  def index
    authorize model
    @vulnerability_bulletin = VulnerabilityBulletin.find(params[:vulnerability_bulletin_id])
    authorize @vulnerability_bulletin
    @vulnerability_bulletin_members = @vulnerability_bulletin.vulnerability_bulletin_members
  end

  def create
    authorize model
    vulnerability_bulletin_member = VulnerabilityBulletinMember.new(vulnerability_bulletin_member_params)
    @vulnerability_bulletin = vulnerability_bulletin_member.vulnerability_bulletin
    authorize @vulnerability_bulletin
    vulnerability_bulletin_member.save
    @vulnerability_bulletin_members = @vulnerability_bulletin.vulnerability_bulletin_members
  end

  def destroy
    authorize model
    vulnerability_bulletin_member = VulnerabilityBulletinMember.find(params[:id])
    @vulnerability_bulletin = vulnerability_bulletin_member.vulnerability_bulletin
    authorize @vulnerability_bulletin
    vulnerability_bulletin_member.destroy
    @vulnerability_bulletin_members = @vulnerability_bulletin.vulnerability_bulletin_members
  end

  private

  def vulnerability_bulletin_member_params
    params.permit(policy(VulnerabilityBulletinMember).permitted_attributes)
  end

  def model
    VulnerabilityBulletinMember
  end

  def records_includes
    [:vulnerability_bulletin, :vulnerability]
  end
end
