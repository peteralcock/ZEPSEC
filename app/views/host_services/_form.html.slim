.well
  = render 'form_errors', record: @record
  .row
    = form_for @record, html: {class: 'form-horizontal'} do |f|

      = hidden_field_tag :template_id, @template_id

      .form-group
        .field
          .col-lg-2.text-right
            = f.label :name, class: 'control-label'
          .col-lg-8
            = f.text_field :name, class: 'form-control'

      .form-group.required
        .field
          .col-lg-2.text-right
            = f.label :port, class: 'control-label'
          .col-lg-8
            = f.text_field :port, class: 'form-control'

      .form-group.required
        .field
          .col-lg-2.text-right
            = f.label :protocol, class: 'control-label'
          .col-lg-8
            = f.select :protocol, HostService.protocols , {}, class: 'form-control'

      .form-group.required
        .field
          .col-lg-2.text-right
            = f.label(:host_service_status_id,
              include_blank: false,
              class: 'control-label')
          .col-lg-8
            = f.collection_select(:host_service_status_id,
              HostServiceStatus.all,
              :id,
              :name,
              {},
              {class: 'form-control'})

      .form-group
        .field
          .col-lg-2.text-right
            = f.label :host_service_status_prop, class: 'control-label'
          .col-lg-8
            = f.text_field :host_service_status_prop, class: 'form-control'

      .form-group.required
        .field
          .col-lg-2.text-right
            = f.label :legality, class: 'control-label'
          .col-lg-8
            = f.select :legality, ScanResult.legalities.keys.collect { |legality| [ScanResult.human_enum_name(:legalities, legality), legality] }, {}, class: 'form-control'

      .form-group.required
        .field
          .col-lg-2.text-right
            = f.label :organization_id, class: 'control-label'
          .col-lg-8
            = autocomplete_field_tag :organization, '', autocomplete_organizations_path, id_element: '#host_service_organization_id',  class: 'form-control', autocomplete: :off, value: (@record.organization&.name || @organization&.name), readonly: @organization&.id.present?
            = f.hidden_field :organization_id, value: @organization&.id || @record.organization_id

      .form-group.required
        .field
          .col-lg-2.text-right
            = f.label :host_id, class: 'control-label'
          .col-lg-8
            = autocomplete_field_tag :host, '', autocomplete_hosts_path, id_element: '#host_service_host_id',  class: 'form-control', autocomplete: :off, value: @record.host&.show_full_name
            = f.hidden_field :host_id, value: @record.host_id

      .form-group
        .col-lg-offset-2.col-lg-8
          .checkbox
             label
               = f.check_box :vulnerable, class: 'big-checkbox'
               strong
                 | #{t('activerecord.attributes.host_service.vulnerable')}

      .form-group
        .field
          .col-lg-2.text-right
            = f.label :vuln_description, class: 'control-label'
          .col-lg-8
            = f.text_area :vuln_description, rows: 8, class: 'form-control'

      .form-group
        .field
          .col-lg-2.text-right
            = f.label :description, class: 'control-label'
          .col-lg-8
            = f.text_area :description, rows: 8, class: 'form-control'

      .actions.form-group
        .col-lg-offset-2.col-lg-8
          => f.submit t('helpers.submit.save'), class: 'btn btn-success'
          = render 'form_back_button'
